version: '3.8'

services:
  jellyphp:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: jellyphp
    restart: unless-stopped
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    volumes:
      - ./src:/var/www/html
      - ./storage/uploads:/var/www/html/storage/uploads
      - ./storage/data:/var/www/html/storage/data
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - PHP_OPCACHE_ENABLE=1
      - PHP_OPCACHE_MEMORY_CONSUMPTION=256
      - PHP_MAX_UPLOAD_SIZE=5G
      - PHP_MAX_POST_SIZE=5G
      - PHP_MEMORY_LIMIT=512M
    networks:
      - jellycloud-net
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  jellycloud:
    image: nginx:alpine
    container_name: jellycloud
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./src:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/nginx-prod.conf:/etc/nginx/nginx.conf:ro
      - ./storage/uploads:/var/www/html/storage/uploads:ro
      # SSL certificates (uncomment for HTTPS)
      # - ./ssl/cert.pem:/etc/nginx/ssl/cert.pem:ro
      # - ./ssl/key.pem:/etc/nginx/ssl/key.pem:ro
    depends_on:
      - jellyphp
    networks:
      - jellycloud-net
      - traefik-net
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
    labels:
      # Traefik labels for reverse proxy (optional)
      - "traefik.enable=true"
      - "traefik.http.routers.jellycloud.rule=Host(`${DOMAIN:-jellycloud.local}`)"
      - "traefik.http.routers.jellycloud.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellycloud.loadbalancer.server.port=80"

  # Redis for session storage and caching (optional)
  redis:
    image: redis:7-alpine
    container_name: jellycloud-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-jellycloud123}
    volumes:
      - redis-data:/data
    networks:
      - jellycloud-net
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.2'

  # Monitoring with Watchtower (auto-updates)
  watchtower:
    image: containrrr/watchtower
    container_name: jellycloud-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 2 * * *  # 2 AM daily
      - WATCHTOWER_INCLUDE_RESTARTING=true
    command: jellycloud jellyphp
    profiles:
      - monitoring

  # Log aggregation with Fluent Bit (optional)
  fluent-bit:
    image: fluent/fluent-bit:latest
    container_name: jellycloud-logs
    restart: unless-stopped
    volumes:
      - ./docker/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./storage/logs:/var/log/jellycloud:ro
    depends_on:
      - jellycloud
    networks:
      - jellycloud-net
    profiles:
      - logging

networks:
  jellycloud-net:
    name: jellycloud-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  traefik-net:
    external: true
    name: traefik-net

volumes:
  redis-data:
    name: jellycloud-redis-data
  uploads-data:
    name: jellycloud-uploads
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/uploads
  app-data:
    name: jellycloud-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/data
