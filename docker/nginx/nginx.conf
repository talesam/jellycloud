# JellyCloud Nginx Server Configuration
server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;
    index index.php;

    # Increase max body size for large file uploads
    client_max_body_size 5G;
    
    # Increase timeouts for large uploads
    client_body_timeout 300s;
    client_header_timeout 300s;
    send_timeout 300s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Rate limiting for login and API endpoints
    location ~ ^/(login|api)/ {
        limit_req zone=login burst=10 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Main location block
    location / {
        limit_req zone=global burst=50 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP processing
    location ~ \.php$ {
        fastcgi_pass jellyphp:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Configure timeouts for large uploads
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;
        
        # Increase buffer for large requests
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }

    # Static files caching and optimization
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
        
        # Enable gzip for text-based static files
        location ~* \.(css|js|svg)$ {
            gzip_static on;
        }
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /(config|storage|vendor|composer\.(json|lock))/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # API-specific optimizations
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # Enable CORS for API (adjust origins as needed)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Upload endpoint optimization
    location /api/files/upload {
        client_body_buffer_size 1m;
        client_body_in_file_only clean;
        try_files $uri $uri/ /index.php?$query_string;
    }
}
